package com.mycompany.employeesapplication;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import org.apache.poi.ss.usermodel.Row;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;

/**
 *
 * @author emre2
 */
public class FrameOfAdministrator extends javax.swing.JFrame {
    
    DbHelper helper = new DbHelper();
    Connection conn = helper.getConnection();
    

    /**
     * Creates new form FrameOfAdministator
     */
    public FrameOfAdministrator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddEmployee = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnDowland = new javax.swing.JButton();
        btnSearchEmployee = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 102));

        btnAddEmployee.setText("Add Employee");
        btnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmployeeActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove Employee");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnDowland.setText("Dowland Employee Table");
        btnDowland.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDowlandActionPerformed(evt);
            }
        });

        btnSearchEmployee.setText("Search Employee");
        btnSearchEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEmployeeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("HAVE A NİCE DAY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDowland, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addComponent(btnAddEmployee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDowland)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchEmployee)
                .addGap(63, 63, 63))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmployeeActionPerformed
        AddEmploye addEmploye = new AddEmploye();
        addEmploye.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnAddEmployeeActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        RemoveEmploye removeEmploye = new RemoveEmploye();
        removeEmploye.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSearchEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEmployeeActionPerformed
        SearchEmployee searchEmployee = new SearchEmployee();
        searchEmployee.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSearchEmployeeActionPerformed

    private void btnDowlandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDowlandActionPerformed
        // Yeni bir çalışma kitabı oluştur
        XSSFWorkbook workbook = new XSSFWorkbook();

        // "Products" adında yeni bir sayfa oluştur
        XSSFSheet sheet = workbook.createSheet("Employees");
        
        try {
            // Veri tabanından çekilen verileri alın
            ArrayList<Personel> personeller = getEmployees();
            // Verileri Excel dosyasına ekle
            int rowNum = 0;
            for (Personel personel : personeller) {
                Row row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(personel.id);
                row.createCell(1).setCellValue(personel.name);
                row.createCell(3).setCellValue(personel.surName);
                row.createCell(4).setCellValue(personel.phoneNumber);
                row.createCell(5).setCellValue(personel.getTcNo());
                row.createCell(6).setCellValue(personel.getAdress());
                row.createCell(7).setCellValue(personel.getSalary());
                row.createCell(8).setCellValue(personel.totalDayOff);
                // Diğer sütunları da ekleyin...
            }
        } catch (SQLException ex) {
            
        }
        try (FileOutputStream fileOut = new FileOutputStream("employee.xlsx")) {
            workbook.write(fileOut);
        } catch (Exception e) {
            e.printStackTrace();
        }
        // Excel dosyasını aç
        File file = new File("employee.xlsx");
        if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.OPEN)) {
            try {
                Desktop.getDesktop().open(file);
            } catch (IOException ex) {
                // Dosya açılırken bir hata oluştu
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnDowlandActionPerformed
    
    public ArrayList<Personel> getEmployees() throws SQLException {
        
        Statement statement = null;
        ResultSet resultSet;
        ArrayList<Personel> personeller = null;
        try {
            conn = helper.getConnection();
            statement = conn.createStatement();
            resultSet = statement.executeQuery("SELECT *from employee");
            personeller = new ArrayList<Personel>();
            while (resultSet.next()) {
                personeller.add(new Personel(resultSet.getInt("id"), resultSet.getString("name"),
                        resultSet.getString("surName"),
                        resultSet.getString("phoneNumber"),
                        resultSet.getString("tcNo"),
                        resultSet.getString("adress"),
                        resultSet.getDouble("salary"),
                        resultSet.getInt("totaldayOff")));
            }
        } catch (Exception e) {
            
        } finally {
            statement.close();
            conn.close();
        }
        return personeller;
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameOfAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameOfAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameOfAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameOfAdministrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameOfAdministrator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnDowland;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearchEmployee;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
